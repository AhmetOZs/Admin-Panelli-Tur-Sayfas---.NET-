// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models.sınıflar;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221025135245_yorum")]
    partial class yorum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.sınıflar.DetayGorsel", b =>
                {
                    b.Property<int>("DetayGorselID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetayResim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("DetayGorselID");

                    b.HasIndex("turID");

                    b.ToTable("detayGorsels");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.DetayGorselRU", b =>
                {
                    b.Property<int>("DetayGorselID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetayResim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("DetayGorselID");

                    b.HasIndex("turID");

                    b.ToTable("detayGorselRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.DetayGorselTR", b =>
                {
                    b.Property<int>("DetayGorselID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetayResim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("DetayGorselID");

                    b.HasIndex("turID");

                    b.ToTable("detayGorselTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.Iletisim", b =>
                {
                    b.Property<int>("iletisimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fotaciklamaen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fotaciklamaru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fotaciklamatr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("konum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("metinen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("metinru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("metintr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefoncep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefonsabit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iletisimID");

                    b.ToTable("iletisims");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurTarih", b =>
                {
                    b.Property<int>("tarihID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tarih")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("tarihID");

                    b.HasIndex("turID");

                    b.ToTable("turTarihs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurTarihRU", b =>
                {
                    b.Property<int>("tarihID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tarih")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("tarihID");

                    b.HasIndex("turID");

                    b.ToTable("turTarihRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurTarihTR", b =>
                {
                    b.Property<int>("tarihID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tarih")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("tarihID");

                    b.HasIndex("turID");

                    b.ToTable("turTarihTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.Turlar", b =>
                {
                    b.Property<int>("turID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bolgesicaklik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bolgeID")
                        .HasColumnType("int");

                    b.Property<string>("girisresim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kontejyan")
                        .HasColumnType("int");

                    b.Property<string>("sehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("turismi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("turtarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ucret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("turID");

                    b.HasIndex("bolgeID");

                    b.ToTable("Turlars");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurlarRU", b =>
                {
                    b.Property<int>("turID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bolgesicaklik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bolgeID")
                        .HasColumnType("int");

                    b.Property<string>("girisresim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kontejyan")
                        .HasColumnType("int");

                    b.Property<string>("sehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("turismi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("turtarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ucret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("turID");

                    b.HasIndex("bolgeID");

                    b.ToTable("TurlarRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurlarTR", b =>
                {
                    b.Property<int>("turID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bolgesicaklik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bolgeID")
                        .HasColumnType("int");

                    b.Property<string>("girisresim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kontejyan")
                        .HasColumnType("int");

                    b.Property<string>("sehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("turismi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("turtarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ucret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("turID");

                    b.HasIndex("bolgeID");

                    b.ToTable("TurlarTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.Yorum", b =>
                {
                    b.Property<int>("YorumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("puan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yorum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YorumID");

                    b.ToTable("yorums");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.bolge", b =>
                {
                    b.Property<int>("bolgeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bolgeismi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bolgeID");

                    b.ToTable("bolges");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.bolgeRU", b =>
                {
                    b.Property<int>("bolgeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bolgeismi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bolgeID");

                    b.ToTable("bolgeRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.bolgeTR", b =>
                {
                    b.Property<int>("bolgeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bolgeismi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bolgeID");

                    b.ToTable("bolgeTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.fotogaleri", b =>
                {
                    b.Property<int>("galeriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("galeriResim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("galeriID");

                    b.ToTable("fotogaleris");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hakkimizdaRU", b =>
                {
                    b.Property<int>("hakkimizdaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hakkimizdaaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hakkimizdabaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hakkimizdavideo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hakkimizdaID");

                    b.ToTable("hakkimizdaRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hakkimizdaTR", b =>
                {
                    b.Property<int>("hakkimizdaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hakkimizdaaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hakkimizdabaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hakkimizdavideo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hakkimizdaID");

                    b.ToTable("hakkimizdaTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hakkimizdaen", b =>
                {
                    b.Property<int>("hakkimizdaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hakkimizdaaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hakkimizdabaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hakkimizdavideo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hakkimizdaID");

                    b.ToTable("hakkimizdaens");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hizmet", b =>
                {
                    b.Property<int>("hizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hizmetaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hizmetad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.Property<string>("ucret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hizmetID");

                    b.HasIndex("turID");

                    b.ToTable("hizmets");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hizmetRU", b =>
                {
                    b.Property<int>("hizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TurlarRUturID")
                        .HasColumnType("int");

                    b.Property<string>("hizmetaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hizmetad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.Property<string>("ucret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hizmetID");

                    b.HasIndex("TurlarRUturID");

                    b.ToTable("hizmetRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hizmetTR", b =>
                {
                    b.Property<int>("hizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hizmetaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hizmetad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.Property<string>("ucret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hizmetID");

                    b.HasIndex("turID");

                    b.ToTable("hizmetTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.turdetay", b =>
                {
                    b.Property<int>("detayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detayaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detaybaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detayresim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("detayID");

                    b.HasIndex("turID");

                    b.ToTable("turdetays");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.turdetayRU", b =>
                {
                    b.Property<int>("detayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detayaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detaybaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detayresim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("detayID");

                    b.HasIndex("turID");

                    b.ToTable("turdetayRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.turdetayTR", b =>
                {
                    b.Property<int>("detayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detayaciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detaybaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detayresim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turID")
                        .HasColumnType("int");

                    b.HasKey("detayID");

                    b.HasIndex("turID");

                    b.ToTable("turdetayTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.DetayGorsel", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.Turlar", "Turlar")
                        .WithMany("detayGorsels")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turlar");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.DetayGorselRU", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarRU", "TurlarRU")
                        .WithMany("detayGorselRUs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurlarRU");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.DetayGorselTR", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarTR", "TurlarTR")
                        .WithMany("detayGorselTRs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurlarTR");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurTarih", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.Turlar", "Turlar")
                        .WithMany("turTarihs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turlar");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurTarihRU", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarRU", "TurlarRU")
                        .WithMany("turTarihRUs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurlarRU");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurTarihTR", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarTR", "TurlarTR")
                        .WithMany("turTarihTRs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurlarTR");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.Turlar", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.bolge", "Bolge")
                        .WithMany("Turlars")
                        .HasForeignKey("bolgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolge");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurlarRU", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.bolgeRU", "bolgeRU")
                        .WithMany("TurlarRUs")
                        .HasForeignKey("bolgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bolgeRU");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurlarTR", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.bolgeTR", "bolgeTR")
                        .WithMany("TurlarTRs")
                        .HasForeignKey("bolgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bolgeTR");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hizmet", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.Turlar", "Turlar")
                        .WithMany("hizmets")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turlar");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hizmetRU", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarRU", "TurlarRU")
                        .WithMany("hizmetRUs")
                        .HasForeignKey("TurlarRUturID");

                    b.Navigation("TurlarRU");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.hizmetTR", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarTR", "TurlarTR")
                        .WithMany("hizmetTRs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurlarTR");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.turdetay", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.Turlar", "Turlar")
                        .WithMany("turdetays")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turlar");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.turdetayRU", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarRU", "TurlarRU")
                        .WithMany("turdetayRUs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurlarRU");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.turdetayTR", b =>
                {
                    b.HasOne("WebApplication1.Models.sınıflar.TurlarTR", "TurlarTR")
                        .WithMany("turdetayTRs")
                        .HasForeignKey("turID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurlarTR");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.Turlar", b =>
                {
                    b.Navigation("detayGorsels");

                    b.Navigation("hizmets");

                    b.Navigation("turdetays");

                    b.Navigation("turTarihs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurlarRU", b =>
                {
                    b.Navigation("detayGorselRUs");

                    b.Navigation("hizmetRUs");

                    b.Navigation("turdetayRUs");

                    b.Navigation("turTarihRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.TurlarTR", b =>
                {
                    b.Navigation("detayGorselTRs");

                    b.Navigation("hizmetTRs");

                    b.Navigation("turdetayTRs");

                    b.Navigation("turTarihTRs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.bolge", b =>
                {
                    b.Navigation("Turlars");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.bolgeRU", b =>
                {
                    b.Navigation("TurlarRUs");
                });

            modelBuilder.Entity("WebApplication1.Models.sınıflar.bolgeTR", b =>
                {
                    b.Navigation("TurlarTRs");
                });
#pragma warning restore 612, 618
        }
    }
}
